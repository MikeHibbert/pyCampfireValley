# CampfireValley Advanced Configuration Example
# This demonstrates all Phase 2 configuration options

# Valley Configuration
valley:
  name: "EnterpriseValley"
  max_campfires: 50
  enable_monitoring: true
  enable_justice: true
  enable_vali: true
  auto_scaling: true
  health_check_interval: 30
  
  # Advanced valley settings
  distributed_mode: false
  consensus_protocol: "raft"
  backup_enabled: true
  backup_interval: 3600

# Campfire Configuration
campfire:
  default_timeout: 60
  max_memory_mb: 1024
  max_cpu_percent: 80
  enable_hot_reload: true
  
  # Specialist campfire settings
  specialist_campfires:
    sanitizer:
      enabled: true
      sanitization_level: "aggressive"
      custom_rules:
        - name: "remove_scripts"
          pattern: "<script.*?</script>"
          action: "remove"
        - name: "sanitize_html"
          pattern: "<[^>]*>"
          action: "escape"
    
    validator:
      enabled: true
      validation_mode: "strict"
      schema_validation: true
      custom_validators:
        - name: "email_validator"
          type: "regex"
          pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
        - name: "phone_validator"
          type: "regex"
          pattern: "^\\+?1?\\d{9,15}$"
    
    router:
      enabled: true
      routing_strategy: "load_balanced"
      enable_caching: true
      cache_ttl: 300

# VALI Services Configuration
vali:
  enabled: true
  service_discovery: true
  health_check_interval: 15
  
  services:
    content_validator:
      enabled: true
      deep_scan: true
      ml_detection: false
      custom_rules:
        - name: "profanity_filter"
          type: "blacklist"
          words: ["spam", "scam", "phishing"]
    
    signature_verifier:
      enabled: true
      algorithm: "RSA-SHA256"
      key_rotation_interval: 86400
      verify_chain: true
    
    security_scanner:
      enabled: true
      scan_engines:
        - "pattern_matching"
        - "heuristic_analysis"
        - "reputation_check"
      threat_levels:
        - "low"
        - "medium" 
        - "high"
        - "critical"

# Justice System Configuration
justice:
  enabled: true
  policy_enforcement: "strict"
  audit_logging: true
  
  policies:
    rate_limiting:
      enabled: true
      default_limit: 100
      window_size: 60
      burst_allowance: 10
      
      custom_limits:
        - entity: "guest_users"
          limit: 10
          window: 60
        - entity: "premium_users"
          limit: 1000
          window: 60
    
    content_policy:
      enabled: true
      auto_enforcement: true
      violation_threshold: 3
      
      rules:
        - name: "no_spam"
          violation_type: "content_violation"
          severity: "high"
          action: "block"
        - name: "rate_limit_exceeded"
          violation_type: "rate_limit"
          severity: "medium"
          action: "throttle"
    
    access_control:
      enabled: true
      default_policy: "deny"
      
      permissions:
        - role: "admin"
          actions: ["read", "write", "delete", "manage"]
        - role: "user"
          actions: ["read", "write"]
        - role: "guest"
          actions: ["read"]

# Advanced Routing Configuration
routing:
  enabled: true
  optimization: true
  health_checking: true
  
  load_balancing:
    algorithm: "weighted_round_robin"
    health_check_interval: 10
    failure_threshold: 3
    recovery_threshold: 2
    
    endpoints:
      - id: "primary"
        address: "valley1.example.com:8080"
        weight: 5
        priority: 1
      - id: "secondary"
        address: "valley2.example.com:8080"
        weight: 3
        priority: 2
      - id: "backup"
        address: "valley3.example.com:8080"
        weight: 1
        priority: 3
  
  failover:
    strategy: "priority_based"
    max_retries: 3
    retry_delay: 1000
    circuit_breaker:
      enabled: true
      failure_threshold: 5
      recovery_timeout: 30000

# Monitoring Configuration
monitoring:
  enabled: true
  metrics_collection: true
  alerting: true
  
  metrics:
    collection_interval: 10
    retention_days: 30
    
    collectors:
      - type: "memory"
        enabled: true
      - type: "file"
        enabled: true
        path: "./logs/metrics.json"
      - type: "prometheus"
        enabled: false
        endpoint: "http://prometheus:9090"
  
  alerts:
    channels:
      - type: "console"
        enabled: true
      - type: "email"
        enabled: false
        smtp_server: "smtp.example.com"
        recipients: ["admin@example.com"]
      - type: "webhook"
        enabled: false
        url: "https://hooks.slack.com/webhook"
    
    rules:
      - name: "high_memory_usage"
        metric: "memory_usage_percent"
        threshold: 85
        severity: "warning"
      - name: "critical_memory_usage"
        metric: "memory_usage_percent"
        threshold: 95
        severity: "critical"
      - name: "high_error_rate"
        metric: "error_rate"
        threshold: 5
        severity: "warning"
  
  logging:
    level: "INFO"
    format: "structured"
    
    handlers:
      - type: "console"
        enabled: true
        level: "INFO"
      - type: "file"
        enabled: true
        level: "DEBUG"
        path: "./logs/campfirevalley.log"
        max_size_mb: 100
        backup_count: 5
      - type: "syslog"
        enabled: false
        facility: "local0"

# Storage Configuration
storage:
  type: "hierarchical"
  base_path: "./storage"
  
  # Hierarchical storage settings
  hierarchical:
    policy:
      name: "enterprise_policy"
      hot_retention_days: 7
      warm_retention_days: 30
      cold_retention_days: 365
      archive_retention_days: 2555
      
      compression:
        enabled: true
        threshold_mb: 10
        type: "gzip"
        level: 6
      
      deduplication:
        enabled: true
        chunk_size: 4096
        algorithm: "sha256"
      
      auto_tiering:
        enabled: true
        check_interval: 3600
        
        rules:
          - condition: "age > 7 days AND access_pattern == 'infrequent'"
            action: "move_to_warm"
          - condition: "age > 30 days AND access_pattern == 'rare'"
            action: "move_to_cold"
          - condition: "age > 365 days"
            action: "move_to_archive"
    
    tiers:
      hot:
        path: "./storage/hot"
        max_size_gb: 100
        compression: false
      warm:
        path: "./storage/warm"
        max_size_gb: 500
        compression: true
      cold:
        path: "./storage/cold"
        max_size_gb: 2000
        compression: true
      archive:
        path: "./storage/archive"
        max_size_gb: 10000
        compression: true

# Security Configuration
security:
  encryption:
    algorithm: "AES-256-GCM"
    key_rotation_interval: 86400
    
  authentication:
    method: "jwt"
    secret_key: "${JWT_SECRET_KEY}"
    token_expiry: 3600
    
  authorization:
    rbac_enabled: true
    default_role: "guest"
    
  tls:
    enabled: true
    cert_path: "./certs/server.crt"
    key_path: "./certs/server.key"
    min_version: "1.2"

# Development Settings
development:
  debug_mode: false
  hot_reload: true
  mock_services: false
  
  testing:
    enabled: false
    test_data_path: "./test_data"
    
  profiling:
    enabled: false
    output_path: "./profiles"

# Production Settings
production:
  debug_mode: false
  hot_reload: false
  
  performance:
    worker_processes: 4
    max_connections: 1000
    connection_timeout: 30
    
  reliability:
    auto_restart: true
    health_checks: true
    graceful_shutdown: true
    shutdown_timeout: 30